    TYPE   arr_19x0_31x0     IS ARRAY  ( 19 DOWNTO 0 )  OF   STD_LOGIC_VECTOR( 31 DOWNTO 0 );
    TYPE   arr_2x0_31x0      IS ARRAY  ( 2  DOWNTO 0 )  OF   STD_LOGIC_VECTOR( 31 DOWNTO 0 );
    TYPE   arr_39x0_31x0     IS ARRAY  ( 39 DOWNTO 0 )  OF   STD_LOGIC_VECTOR( 31 DOWNTO 0 );
    TYPE	locid	 			IS ARRAY (GATE_NUM - 1 DOWNTO 0) OF std_logic_vector(31 downto 0);
    TYPE    locid_xor			IS ARRAY (GATE_NUM - 1 DOWNTO 0) OF std_logic_vector(31 downto 0);
    TYPE    twodim  			IS ARRAY (GATE_NUM - 1 DOWNTO 0) OF std_logic_vector(79 downto 0);
    TYPE    andid	 			IS ARRAY (GATE_NUM - 1 DOWNTO 0) OF std_logic_vector(63 downto 0);
    TYPE    arr_and_gt_id		IS ARRAY (2*GATE_NUM -1 DOWNTO 0) OF std_logic_vector(31 downto 0);
    TYPE	arr_num_1x0			IS ARRAY (GATE_NUM - 1 DOWNTO 0) OF STD_LOGIC_VECTOR(1 downto 0);
    constant ZERO48BIT	    :	std_logic_vector(47 downto 0) := (others => '0');
    constant ZERO56BIT	    :	std_logic_vector(55 downto 0) := (others => '0');
    constant ZERO60BIT	    :	std_logic_vector(59 downto 0) := (others => '0');
    constant ONE60BIT	    :	std_logic_vector(59 downto 0) := (others => '1');
    constant ONE52BIT	    :	std_logic_vector(51 downto 0) := (others => '1');
    constant ONE54BIT	    :	std_logic_vector(53 downto 0) := (others => '1');
    constant ONE53BIT	    :	std_logic_vector(52 downto 0) := (others => '1');
    constant ZERO352BIT	:	std_logic_vector(351 downto 0):= (others => '0');
    constant ZERO480BIT	:	std_logic_vector(479 downto 0):= (others => '0');
    constant ZERO448BIT	:	std_logic_vector(447 downto 0):= (others => '0');
    constant ZERO416BIT	:	std_logic_vector(415 downto 0):= (others => '0');
    constant ZERO432BIT	:	std_logic_vector(431 downto 0):= (others => '0');
    constant ZERO424BIT	:	std_logic_vector(423 downto 0):= (others => '0');
    constant ALLONE		:	std_logic_vector(GATE_NUM - 1 downto 0) := (others => '1');
    signal addr_1v_reg	:	locid;
    signal addr_2v_reg	:	locid;
    signal addr_3v_reg	:	locid;
    signal ok_to_wr 	:	std_logic_vector(GATE_NUM -1 downto 0);
    signal isand		:	std_logic;
    signal isxor		:	std_logic;
    signal addr_1v_xor_reg	:	locid;
    signal addr_2v_xor_reg	:	locid;
    signal addr_3v_xor_reg	:	locid;
    signal gc_xor_en_reg	:	STD_LOGIC_VECTOR(GATE_NUM -1 downto 0);
    signal gc_xor_en_reg1	:	STD_LOGIC_VECTOR(GATE_NUM -1 downto 0);
    signal and_gt_id_reg	:	arr_and_gt_id;
    signal gc_rst_done	    :	std_logic;
    signal comp_done_reg   :	std_logic;
    signal addr_new		:	std_logic;
    signal reg_cnt		    :	arr_num_1x0;
    signal gc_done		    :	std_logic_vector(GATE_NUM - 1 downto 0);
    signal gc_done_and	    :	std_logic;
    signal gc_res			:	twodim; 			--std_logic_vector(79 downto 0);
    signal read_in		    :	std_logic_vector(GATE_NUM - 1 downto 0);
    signal data1_rd		:	twodim; 			-- std_logic_vector(79 downto 0);
    signal data2_rd		:	twodim; 			-- std_logic_vector(79 downto 0);
    signal r_input		    :	std_logic_vector(79 downto 0);
    signal and_id_input	:	andid; 				--std_logic_vector(63 downto 0);
    signal cyp_and0_2	    :	twodim; 				--std_logic_vector(79 downto 0);
    signal cyp_and0_3	    :	twodim;
    signal cyp_and0_4	    :	twodim;
    signal ready_comp	    :	std_logic_vector(GATE_NUM - 1 downto 0);
    signal gc_clrn		    :	std_logic_vector(GATE_NUM - 1 downto 0);
    signal new_sig_vld     :	std_logic_vector(GATE_NUM - 1 downto 0);
    signal new_sig_vld_xor : std_logic_vector(GATE_NUM -1 downto 0);
    signal gc_and_en_reg   :	std_logic_vector(GATE_NUM -1 downto 0);
    signal gc_and_en_reg1  :	std_logic_vector(GATE_NUM -1 downto 0);
    signal reg_clr		    :	std_logic;
    signal layer_cnt		:	std_logic_vector(31 downto 0);
    signal layer_num_reg   :	std_logic_vector(31 downto 0);
    signal xor_gt_id_reg   :	locid_xor;
    signal state : state_type;
    signal cache_reg       :  std_array;
    signal address_sig 	:		STD_LOGIC_VECTOR (15 DOWNTO 0);
    signal data_sig		:		STD_LOGIC_VECTOR (107 DOWNTO 0);
    signal wren_sig		:		STD_LOGIC;
    signal q_sig			:		STD_LOGIC_VECTOR (107 DOWNTO 0);
